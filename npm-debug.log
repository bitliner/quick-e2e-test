0 info it worked if it ends with ok
1 verbose cli [ '/home/bitliner/.nvm/v0.10.36/bin/node',
1 verbose cli   '/home/bitliner/.nvm/v0.10.36/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.36
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/bitliner/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/bitliner/.npm/quick-e2e-test/1.0.0/package.tgz', '.' ]
11 verbose tarball /home/bitliner/.npm/quick-e2e-test/1.0.0/package.tgz
12 verbose folder .
13 info prepublish quick-e2e-test@1.0.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/bitliner/.npm/1f1177db-tar.lock
16 silly lockFile f535e0c0-quick-e2e-test-1-0-0-package-tgz tar:///home/bitliner/.npm/quick-e2e-test/1.0.0/package.tgz
17 verbose lock tar:///home/bitliner/.npm/quick-e2e-test/1.0.0/package.tgz /home/bitliner/.npm/f535e0c0-quick-e2e-test-1-0-0-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile f535e0c0-quick-e2e-test-1-0-0-package-tgz tar:///home/bitliner/.npm/quick-e2e-test/1.0.0/package.tgz
21 silly lockFile f535e0c0-quick-e2e-test-1-0-0-package-tgz tar:///home/bitliner/.npm/quick-e2e-test/1.0.0/package.tgz
22 silly lockFile 18d3aae6-npm-quick-e2e-test-1-0-0-package /home/bitliner/.npm/quick-e2e-test/1.0.0/package
23 verbose lock /home/bitliner/.npm/quick-e2e-test/1.0.0/package /home/bitliner/.npm/18d3aae6-npm-quick-e2e-test-1-0-0-package.lock
24 silly lockFile 18d3aae6-npm-quick-e2e-test-1-0-0-package /home/bitliner/.npm/quick-e2e-test/1.0.0/package
25 silly lockFile 18d3aae6-npm-quick-e2e-test-1-0-0-package /home/bitliner/.npm/quick-e2e-test/1.0.0/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'quick-e2e-test',
28 silly publish   version: '1.0.0',
28 silly publish   description: 'quick-e2e-test =========================',
28 silly publish   main: 'quick-e2e-test.js',
28 silly publish   scripts:
28 silly publish    { test: 'cd test && mocha ./test.js',
28 silly publish      'generate-parser': 'cd lib && cd parser && pegjs ./grammar.pegjs ./parser.js' },
28 silly publish   bin: { 'quick-e2e-test': 'bin/quick-e2e-test' },
28 silly publish   author: '',
28 silly publish   license: 'ISC',
28 silly publish   dependencies: { ejs: '^2.3.1', logb: '0.0.2' },
28 silly publish   devDependencies: { chai: '^2.3.0' },
28 silly publish   readme: 'quick-e2e-test\n=========================\n\nIt allows you to build end-to-end test specifying just the scnearios to test in natural language (text).\n\n# Requirements\n\n* [protractor](http://angular.github.io/protractor/#/) - this module is build to work with protrator - but it can be easily extended to work with other frameworks for end-to-end testing\n* nodejs\n* npm\n\n# Example\n\nThis example shows how to specify an end-to-end test in natural language to test a login form.\n\n```json\n{\n\t"Login": {\n\t\t"beforeEach": [\n\t\t\t"go to /login"\n\t\t],\n\t\t"test": [\n\t\t\t"when users send \'username\' to \'.username\' and send \'password\' to \'.password\' and click on \'.submit\', then url is \'/product-list\'"\n\t\t]\n\t}\n}\n```\n\ngenerates\n\n\n```js\n/* jshint ignore: start */\n\'use strict\';\n\ndescribe(\'Login\', function() {\n\n\tit("when users send \'username\' to \'.username\' and send \'password\' to \'.password\' and click on \'.submit\', then url is \'/product-list\'", function() {\n\n\n\t\telement(by.css(\'.username\')).sendKeys(\'username\');\n\t\telement(by.css(\'.password\')).sendKeys(\'password\');\n\t\telement(by.css(\'.submit\')).click();\n\n\t\texpect(browser.getUrl())[\'toBe\'](\'/product-list\');\n\n\n\t});\n\n});\n```\n\n\n\n# Installation\n\n`npm install -g quick-e2e-test`\n\n# Usage\n\n## 1. Specify the end-to-end test in a JSON file\n\nExample `config.json`:\n\n```json\n{\n\t"Login": {\n\t\t"beforeEach": [\n\t\t\t"go to /login"\n\t\t],\n\t\t"test": [\n\t\t\t"when users send \'username\' to \'.username\' and send \'password\' to \'.password\' and click on \'.submit\', then url is \'/product-list\'"\n\t\t]\n\t}\n}\n```\n## 2. Generate end-to-end test \n\nRun `quick-e2e-test ./config.json` and it will generate in the current folder the file for e2e-test.\n',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: 'a1c7cef06d3d6735a6ff6b257f8d59b4314ad444',
28 silly publish   _id: 'quick-e2e-test@1.0.0',
28 silly publish   _shasum: '32104522551411d336c1ec15e5e49d51344e3cdd',
28 silly publish   _from: '.' }
29 verbose request where is /quick-e2e-test
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 80dac93f474108fe
32 verbose url raw /quick-e2e-test
33 verbose url resolving [ 'https://registry.npmjs.org/', './quick-e2e-test' ]
34 verbose url resolved https://registry.npmjs.org/quick-e2e-test
35 verbose request where is https://registry.npmjs.org/quick-e2e-test
36 info trying registry request attempt 1 at 17:38:39
37 http PUT https://registry.npmjs.org/quick-e2e-test
38 http 403 https://registry.npmjs.org/quick-e2e-test
39 verbose headers { 'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '95',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Sat, 16 May 2015 15:38:40 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-ams4143-AMS',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1431790719.514562,VS0,VE811' }
40 error publish Failed PUT 403
41 error Error: "You cannot publish over the previously published version 1.0.0." : quick-e2e-test
41 error     at RegClient.<anonymous> (/home/bitliner/.nvm/v0.10.36/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/home/bitliner/.nvm/v0.10.36/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/home/bitliner/.nvm/v0.10.36/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/home/bitliner/.nvm/v0.10.36/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/home/bitliner/.nvm/v0.10.36/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:944:16
41 error     at process._tickCallback (node.js:442:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 3.13.0-37-generic
44 error command "/home/bitliner/.nvm/v0.10.36/bin/node" "/home/bitliner/.nvm/v0.10.36/bin/npm" "publish"
45 error cwd /home/bitliner/wonderflow/wonderboard/frontend/quick-e2e-test
46 error node -v v0.10.36
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
